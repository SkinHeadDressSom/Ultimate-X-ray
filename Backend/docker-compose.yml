#version: "3.8"

services:
  postgres-service:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hospital
    ports:
      - "5432:5432"
    volumes:
      - databasepg:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    restart: always

  kong-db:
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong-db-data:/var/lib/postgresql/data

  kong:
    image: kong:3.5
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - 8000:8000
      - 8001:8001
    depends_on:
      - kong-db
    volumes:
      - ./kong.yml:/kong.yml

  auth-service:
    build: ./services/auth
    env_file: "./services/auth/.env"
    ports:
      - "3001:3001"
    depends_on:
      - postgres-service

  fetch-data-service:
    build: ./services/fetch-data
    env_file: "./services/fetch-data/.env"
    ports:
      - "3002:3002"
    depends_on:
      - postgres-service

  ai-detection-service:
    build: ./services/ai-detection
    ports:
      - "3010:3010"
    depends_on:
      - postgres-service

volumes:
  kong-db-data:
  databasepg:

networks:
  default:
    driver: bridge
